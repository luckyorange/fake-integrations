export default {
  model: {
    prop: 'outputArray',
    event: 'clearOutput'
  },
  props: [
    'outputArray'
  ],
  mounted () {
    window.getOutputArray = this.getOutputArray.bind(this)
  },
  methods: {
    clearOutput () {
      this.$emit('clearOutput', [])
    },

    getOutputId (outputIndex) {
      return `output-${outputIndex}`
    },

    getOutputArray () {
      const outputElements = Array.prototype.slice.call(
        this.$refs.outputList.querySelectorAll('.output-value')
      )
      const outputArray = outputElements.map(element => {
        return JSON.parse(element.innerText)
      })
      return outputArray
    }
  },
  template: `
    <section>
      <h1>Output</h1>
      <button
        id="clear-output"
        @click="clearOutput"
        >Clear output</button>
      <ul
        ref="outputList"
        style="padding-left: 0;"
        >
        <li
          v-for="(output, index) in outputArray"
          :id="getOutputId(index)"
          style="list-style-type: none;"
          >
          <pre class="output-value">\{{ output }}</pre>
        </li>
      </ul>
    </section>
  `
}
