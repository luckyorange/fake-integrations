export default {
  model: {
    prop: 'settings',
    event: 'changedSetting'
  },
  props: {
    settings: Object,
    settingsSchema: Object
  },
  computed: {
    displaySettings () {
      return Object.keys(this.settingsSchema.children).reduce(
        (returnArray, settingName) => {
          const setting = {
            name: settingName,
            type: this.settingsSchema.children[settingName].type === 'boolean'
              ? 'checkbox'
              : 'text'
          }
          returnArray.push(setting)
          return returnArray
        },
        []
      )
    }
  },
  methods: {
    changeSetting (settingName, newValue) {
      const newSettings = Object.assign({}, this.settings)
      newSettings[settingName] = newValue
      this.$emit('changedSetting', newSettings)
    }
  },
  template: `
    <section>
      <h1>Settings</h1>
      <ul>
        <li
          v-for="setting in displaySettings"
        >
          <input
            :id="setting.name"
            :name="setting.name"
            :type="setting.type"
            @change="changeSetting($event.target.name, $event.target.checked)"
            >
          <label
            :for="setting.name"
          >\{{ setting.name }}</label>
        </li>
      </ul>
    </section>
  `
}
