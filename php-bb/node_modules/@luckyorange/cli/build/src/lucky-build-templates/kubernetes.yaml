---
# Service
apiVersion: v1
kind: Service
metadata:
  name: {{name}}
  namespace: {{namespace}}
  annotations:
    {{#if public}}
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind: Mapping
      name: {{name}}-mapping
      prefix: /{{servicePrefix}}{{name}}
      service: {{name}}
      timeout_ms: {{timeout}}
    {{/if}}
    {{#if auth}}
    luckyorange.com/auth: |
      {{{auth}}}
    {{/if}}
    {{#if cdn}}
    cloud.google.com/backend-config: '{"default": "{{name}}-backend-config"}'
    {{/if}}
spec:
  type: {{serviceType}}
  selector:
    app: {{name}}
  ports:
  - port: 80
    targetPort: http-port

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{name}}
  namespace: {{namespace}}
spec:
  replicas: {{replicas}}
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: {{name}}
  template:
    metadata:
      annotations:
        {{#if noIstio}}
        sidecar.istio.io/inject: "false"
        {{/if}}
      labels:
        app: {{name}}
    spec:
      {{#if serviceAccount}}
      serviceAccountName: {{serviceAccount}}
      {{/if}}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: {{name}}
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - name: {{name}}
        image: us-central1-docker.pkg.dev/{{registry}}/new-app/{{name}}:{{version}}
        ports:
        - name: http-port
          containerPort: 3000
        {{#if livenessProbe}}
        livenessProbe:
          httpGet:
            path: /_health
            scheme: HTTP
            port: http-port
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 10
        {{/if}}
        {{#if readinessProbe}}
        readinessProbe:
          httpGet:
            path: /_health
            scheme: HTTP
            port: http-port
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 10
        {{/if}}
        env:
        - name: LUCKY_PROJECT
          value: {{luckyProject}}
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: {{googleApplicationCredentials}}
        {{#if autoscale}}
        resources:
          requests:
            cpu: 0.2
            memory: 0.5Gi
          limits:
            cpu: 1
            memory: {{memoryLimits}}
        {{/if}}

{{#if autoscale }}
---
# Autoscaler
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{name}}
  namespace: {{namespace}}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{name}}
  minReplicas: 2
  maxReplicas: 20
  targetCPUUtilizationPercentage: 70
{{/if}}

{{#if redis}}
---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: {{name}}-redis
  namespace: {{namespace}}
  labels:
    app: {{name}}-redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: {{name}}-redis

---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{name}}-redis
  namespace: {{namespace}}
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: {{name}}-redis
  template:
    metadata:
      labels:
        app: {{name}}-redis
    spec:
      containers:
      - name: master
        image: redis:5
        ports:
        - containerPort: 6379
{{/if}}

{{#if cdn}}
---
# Backend config to enable Cloud CDN
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: {{name}}-backend-config
  namespace: {{namespace}}
spec:
  cdn:
    enabled: true
    cachePolicy:
      includeHost: true
{{/if}}
