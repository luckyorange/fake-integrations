"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const klaw = require('klaw');
const copyTemplate = require('./copy-template');
const path = require('path');
module.exports = (copyFrom, copyTo, data) => {
    return new Promise((resolve, reject) => {
        const files = [];
        klaw(copyFrom)
            .on('data', (file) => __awaiter(void 0, void 0, void 0, function* () {
            // Exclude directories
            if (file.stats.isDirectory() ||
                file.path.includes('.DS_Store'))
                return;
            files.push(file);
            try {
                const output = path.relative(copyFrom, file.path);
                yield copyTemplate(file.path, path.resolve(copyTo, output), data);
            }
            catch (e) {
                reject(e);
            }
        }))
            .on('end', () => resolve(files))
            .on('error', reject);
    });
};
