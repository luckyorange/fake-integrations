- pipeline: "Test"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "refs/heads/*"
  ref_type: "WILDCARD"
  actions:
  - action: "Execute: npm install"
    type: "BUILD"
    working_directory: "/buddy/workdir"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "npm ci"
    mount_filesystem_path: "/buddy/workdir"
    trigger_condition_paths:
    - "package.json"
    - "package-lock.json"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Execute: npm test"
    type: "BUILD"
    working_directory: "/buddy/workdir"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "npm test"
    volume_mappings:
    - "/:/buddy/workdir"
    trigger_condition: "ALWAYS"
    shell: "BASH"

- pipeline: "Update Integration Config"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: npm install"
    type: "BUILD"
    working_directory: "/buddy/workdir"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "npm ci"
    mount_filesystem_path: "/buddy/workdir"
    trigger_condition_paths:
    - "package.json"
    - "package-lock.json"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Execute: update integration"
    type: "BUILD"
    working_directory: "/buddy/workdir"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "export NPM_TOKEN=${NPM_TOKEN}"
    - "npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}"
    - ""
    - "# Prod"
    - "npx lucky start -p lucky-orange npx update-integration"
    - ""
    - "# Staging"
    - "npx lucky start -p lucky-orange-staging npx update-integration"
    mount_filesystem_path: "/buddy/workdir"
    shell: "BASH"
    trigger_condition: "ALWAYS"

{{#if docs}}
- pipeline: "Docs"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  priority: "NORMAL"
  target_site_url: "https://docs.luckyorange.rocks/repos/{{ name }}"
  fail_on_prepare_env_warning: true
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: rush install"
    type: "BUILD"
    working_directory: "/buddy/workdir"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "export NPM_TOKEN=${NPM_TOKEN}"
    - "npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}"
    - "node ./common/scripts/install-run-rush.js install"
    volume_mappings:
    - "/:/buddy/workdir"
    trigger_condition: "ALWAYS"
    shell: "BASH"
  - action: "Execute: rush build:docs"
    type: "BUILD"
    working_directory: "/buddy/workdir"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "node ./common/scripts/install-run-rush.js build:docs"
    volume_mappings:
    - "/:/buddy/integration-utilities"
    trigger_condition: "ALWAYS"
    shell: "BASH"
  - action: "Deploy: Cloud Storage"
    type: "GOOGLE_CLOUD_STORAGE"
    input_type: "BUILD_ARTIFACTS"
    local_path: "docs/docs/.vuepress/dist"
    remote_path: "${BUDDY_PROJECT_NAME}"
    bucket_name: "lucky-orange-docs"
    application_name: "lucky-orange"
    application_display_name: "lucky-orange"
    integration_hash: "rG7YBDXMVyb8W63lavAZEJ24gN"
  - action: "Execute: Deploy docs website"
    type: "RUN_NEXT_PIPELINE"
    comment: "Triggered by ${execution.pipeline.name} execution #${execution.id}"
    trigger_condition: "ALWAYS"
    revision: "HEAD"
    next_project_name: "docs"
    next_pipeline_name: "Website"
{{/if}}

{{#if backend}}
- pipeline: "Backend: Prod"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  folder: "Backend"
  ref_type: "BRANCH"
  do_not_create_commit_status: true
  trigger_condition: "ON_CHANGE_AT_PATH"
  trigger_condition_paths:
  - "/packages/backend"
  actions:
  - action: "Execute: transpile typescript code"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/backend"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
      - "# Clean up the build folder so it doesn't grow forever"
      - "rm -rf build"
      - "# Install Typescript"
      - "npm i -g typescript"
      - "# install dependencies (including devDependencies so we have the type defs)"
      - "npm install"
      - "npm install --also=dev"
      - "# Transpile the typescript code"
      - "tsc"
    mount_filesystem_path: "/buddy/workdir"
    trigger_condition_paths:
      - "src/"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Build: Docker Image"
    type: "DOCKERFILE"
    login: "_json_key"
    password: "secure!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"
    docker_image_tag: "$BUDDY_EXECUTION_REVISION"
    dockerfile_path: "packages/backend/Dockerfile"
    context_path: "packages/backend"
    repository: "lucky-orange/{{ name }}-backend"
    registry: "us.gcr.io"
    build_args:
    - "NPM_TOKEN=${NPM_TOKEN}"
    trigger_condition: "ALWAYS"
  - action: "Execute: npm i @luckyorange/cli"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/backend"
    volume_mappings:
    - "/:/buddy/workdir"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "# Clean up node modules so it doesn't grow forever"
    - "rm -rf node_modules"
    - "# Install the CLI only"
    - "npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}"
    - "npm i @luckyorange/cli --no-package-lock"
    trigger_condition_paths:
    - "/package.json"
    - "/package-lock.json"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Execute: lucky build"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/backend"
    volume_mappings:
    - "/:/buddy/workdir"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "# Export ENV variables"
    - "export LO_BUILD_VERSION=$BUDDY_EXECUTION_REVISION"
    - "# Run build script"
    - "npx lucky build"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Deploy: Kubernetes"
    type: "KUBERNETES_CLI"
    server_key: "secure!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"
    zone_id: "us-central1-a"
    cluster: "api"
    application_name: "Lucky Orange"
    application_id: "lucky-orange"
    execute_commands:
    - "kubectl apply -f packages/backend/dist/kubernetes/prod.yaml"
    - ""
    gke_auth_type: "SERVICE_ACCOUNT"
    kubectl_version: "latest"
    trigger_condition: "ALWAYS"
    integration_hash: "rG7YBDXMVyb8W63lavAZEJ24gN"

- pipeline: "Backend: Staging"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  folder: "Backend"
  ref_type: "BRANCH"
  do_not_create_commit_status: true
  trigger_condition: "ON_CHANGE_AT_PATH"
  trigger_condition_paths:
  - "/packages/backend"
  actions:
  - action: "Execute: transpile typescript code"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/backend"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
      - "# Clean up the build folder so it doesn't grow forever"
      - "rm -rf build"
      - "# Install Typescript"
      - "npm i -g typescript"
      - "# install dependencies (including devDependencies so we have the type defs)"
      - "npm install"
      - "npm install --also=dev"
      - "# Transpile the typescript code"
      - "tsc"
    mount_filesystem_path: "/buddy/workdir"
    trigger_condition_paths:
      - "src/"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Build: Docker Image"
    type: "DOCKERFILE"
    login: "_json_key"
    password: "secure!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"
    docker_image_tag: "$BUDDY_EXECUTION_REVISION"
    dockerfile_path: "packages/backend/Dockerfile"
    context_path: "packages/backend"
    repository: "lucky-orange-staging/{{ name }}-backend"
    registry: "us.gcr.io"
    build_args:
    - "NPM_TOKEN=${NPM_TOKEN}"
    trigger_condition: "ALWAYS"
  - action: "Execute: npm i @luckyorange/cli"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/backend"
    volume_mappings:
    - "/:/buddy/workdir"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "# Clean up node modules so it doesn't grow forever"
    - "rm -rf node_modules"
    - "# Install the CLI only"
    - "npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}"
    - "npm i @luckyorange/cli --no-package-lock"
    trigger_condition_paths:
    - "/package.json"
    - "/package-lock.json"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Execute: lucky build"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/backend"
    volume_mappings:
    - "/:/buddy/workdir"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "# Export ENV variables"
    - "export LO_BUILD_VERSION=$BUDDY_EXECUTION_REVISION"
    - "# Run build script"
    - "npx lucky build"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Deploy: Kubernetes"
    type: "KUBERNETES_CLI"
    server_key: "secure!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"
    zone_id: "us-central1-c"
    cluster: "api"
    application_name: "Lucky Orange Staging"
    application_id: "lucky-orange-staging"
    execute_commands:
    - "kubectl apply -f packages/backend/dist/kubernetes/staging.yaml"
    - ""
    gke_auth_type: "SERVICE_ACCOUNT"
    kubectl_version: "latest"
    trigger_condition: "ALWAYS"
    integration_hash: "Xv20qjMVWPe9GQ9PbLywr4pRnJ"
{{/if}}

{{#if core}}
- pipeline: "Core: Prod"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  folder: "Core"
  ref_type: "BRANCH"
  trigger_condition: "ON_CHANGE_AT_PATH"
  trigger_condition_paths:
  - "/packages/core"
  actions:
  - action: "Execute: npm install"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/core"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "npm ci"
    mount_filesystem_path: "/buddy/workdir"
    trigger_condition_paths:
    - "package.json"
    - "package-lock.json"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Execute: npm run build"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/core"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "npm run build"
    mount_filesystem_path: "/buddy/workdir"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Deploy: Upload to S3"
    type: "AMAZON_S3"
    input_type: "BUILD_ARTIFACTS"
    local_path: "/packages/core/dist"
    remote_path: "/integrations/${BUDDY_PROJECT_NAME}/core"
    bucket_name: "luckyorange-public"
    acl: "PUBLIC_READ"
    cache_control: "max-age=3600"
    integration_hash: "ANR8M7Vl4zbq6W5kdprOZqEgL3"
  - action: "Execute: Purge Cloudfront cache"
    type: "CLOUD_FRONT"
    input_type: "SCM_REPOSITORY"
    distribution_id: "E32D16JU5N80OH"
    distribution_name: "New App Public CDN"
    base_url: "/integrations/{{name}}/core"
    purge_all: true
    purge_by_change_set_limit: 10
    timeout: 0
    integration_hash: "ANR8M7Vl4zbq6W5kdprOZqEgL3"

- pipeline: "Core: Staging"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  folder: "Core"
  ref_type: "BRANCH"
  trigger_condition: "ON_CHANGE_AT_PATH"
  trigger_condition_paths:
  - "/packages/core"
  actions:
  - action: "Execute: npm install"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/core"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "npm ci"
    mount_filesystem_path: "/buddy/workdir"
    trigger_condition_paths:
    - "package.json"
    - "package-lock.json"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Execute: npm run build"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/core"
    docker_image_name: "library/node"
    docker_image_tag: "14"
    execute_commands:
    - "npm run build"
    mount_filesystem_path: "/buddy/workdir"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Deploy: Cloud Storage"
    type: "GOOGLE_CLOUD_STORAGE"
    input_type: "BUILD_ARTIFACTS"
    local_path: "/packages/core/dist"
    remote_path: "/integrations/${BUDDY_PROJECT_NAME}/core"
    bucket_name: "lucky-orange-staging-public"
    application_name: "lucky-orange-staging"
    application_display_name: "lucky-orange-staging"
    integration_hash: "Xv20qjMVWPe9GQ9PbLywr4pRnJ"
{{/if}}

{{#if privacy}}
- pipeline: "Privacy: Prod"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  folder: "Privacy"
  ref_type: "BRANCH"
  trigger_condition: "ON_CHANGE_AT_PATH"
  trigger_condition_paths:
  - "/packages/privacy"
  actions:
  - action: "Execute: npm install"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/privacy"
    docker_image_name: "library/node"
    docker_image_tag: "18"
    execute_commands:
    - "npm ci"
    mount_filesystem_path: "/buddy/workdir"
    trigger_condition_paths:
    - "package.json"
    - "package-lock.json"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Execute: npm run build"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/privacy"
    docker_image_name: "library/node"
    docker_image_tag: "18"
    execute_commands:
    - "npm run build"
    mount_filesystem_path: "/buddy/workdir"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Deploy: Upload to S3"
    type: "AMAZON_S3"
    input_type: "BUILD_ARTIFACTS"
    local_path: "/packages/privacy/dist"
    remote_path: "/integrations/${BUDDY_PROJECT_NAME}/privacy"
    bucket_name: "luckyorange-public"
    acl: "PUBLIC_READ"
    cache_control: "max-age=3600"
    integration_hash: "ANR8M7Vl4zbq6W5kdprOZqEgL3"
  - action: "Execute: Purge Cloudfront cache"
    type: "CLOUD_FRONT"
    input_type: "SCM_REPOSITORY"
    distribution_id: "E32D16JU5N80OH"
    distribution_name: "New App Public CDN"
    base_url: "/integrations/{{name}}/privacy"
    purge_all: true
    purge_by_change_set_limit: 10
    timeout: 0
    integration_hash: "ANR8M7Vl4zbq6W5kdprOZqEgL3"

- pipeline: "Privacy: Staging"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  folder: "Privacy"
  ref_type: "BRANCH"
  trigger_condition: "ON_CHANGE_AT_PATH"
  trigger_condition_paths:
  - "/packages/privacy"
  actions:
  - action: "Execute: npm install"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/privacy"
    docker_image_name: "library/node"
    docker_image_tag: "18"
    execute_commands:
    - "npm ci"
    mount_filesystem_path: "/buddy/workdir"
    trigger_condition_paths:
    - "package.json"
    - "package-lock.json"
    shell: "BASH"
    trigger_condition: "ON_CHANGE_AT_PATH"
  - action: "Execute: npm run build"
    type: "BUILD"
    working_directory: "/buddy/workdir/packages/privacy"
    docker_image_name: "library/node"
    docker_image_tag: "18"
    execute_commands:
    - "npm run build"
    mount_filesystem_path: "/buddy/workdir"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Deploy: Cloud Storage"
    type: "GOOGLE_CLOUD_STORAGE"
    input_type: "BUILD_ARTIFACTS"
    local_path: "/packages/privacy/dist"
    remote_path: "/integrations/${BUDDY_PROJECT_NAME}/privacy"
    bucket_name: "lucky-orange-staging-public"
    application_name: "lucky-orange-staging"
    application_display_name: "lucky-orange-staging"
    integration_hash: "Xv20qjMVWPe9GQ9PbLywr4pRnJ"
{{/if}}
