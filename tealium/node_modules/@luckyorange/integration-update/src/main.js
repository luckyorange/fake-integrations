const elasticsearch = require('@luckyorange/utilities-elasticsearch')
const { readdirSync } = require('fs')
const joi = require('joi')
const chalk = require('chalk')

module.exports = Object.freeze({
  main
})

function main (args) {
  const configPath = getConfigPath(args)
  const config = require(configPath)
  const configSchema = joi.object({
    id: joi.string().required(),
    labels: joi.object(),
    images: joi.object(),
    active: joi.boolean(),
    settings: joi.func(),
    hidden: joi.boolean(),
    hasPrivacyEndpoint: joi.boolean(),
    authentication: joi.object().keys({
      type: joi.string().allow('oauth', 'appStore', 'none', null),
      appStoreUrl: joi.string()
    }),
    customTabs: joi.array().items(
      joi.object().keys({
        name: joi.string(),
        label: joi.string()
      })
    )
  })

  const validation = configSchema.validate(config)

  if (validation.error) {
    throw new Error('Error validating integration config')
  }

  const schema = config.settings(joi)
  const types = readdirSync(`${process.cwd()}/packages`, { withFileTypes: true })
    .filter(entry => entry.isDirectory() && !entry.name.startsWith('.'))
    .map(entry => entry.name)

  config.settings = schema.describe()
  config.types = types
  config.updatedAt = new Date()

  elasticsearch.getElassandraClients()
  const client = elasticsearch.elassandraClients.FOREVER

  client.index({
    id: config.id,
    index: 'integrations',
    refresh: 'true',
    body: config
  }).then(() => {
    console.log(chalk.green(`Updated [${config.id}] integration config successfully!`))
  })
}

function getConfigPath (args) {
  const index = args.findIndex(arg => arg === '-c')

  let path = index >= 0
    ? args[index + 1]
    : 'integration.config.js'

  if (path.startsWith('./')) path = path.substr(2)

  path = `${process.cwd()}/${path}`

  return path
}
