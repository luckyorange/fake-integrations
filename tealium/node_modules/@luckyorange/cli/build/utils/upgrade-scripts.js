"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const readPkg = require('read-pkg');
const writePkg = require('write-pkg');
const pkg = readPkg.sync();
module.exports = [
    {
        title: 'Upgrade package debug script to support Windows [one time]',
        isNeeded() {
            var _a, _b;
            return (_b = (_a = pkg === null || pkg === void 0 ? void 0 : pkg.scripts) === null || _a === void 0 ? void 0 : _a.debug) === null || _b === void 0 ? void 0 : _b.includes('node_modules/.bin/micro-dev');
        },
        action() {
            return __awaiter(this, void 0, void 0, function* () {
                pkg.scripts.debug = 'lucky start -- node --inspect node_modules/micro-dev/bin/micro-dev.js';
                yield writePkg(pkg);
            });
        }
    }
];
